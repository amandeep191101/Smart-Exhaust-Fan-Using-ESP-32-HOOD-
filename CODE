#define BLYNK_TEMPLATE_ID "TMPL3M9i-n8uj"
#define BLYNK_TEMPLATE_NAME "IoT Smart Exhaust Fan" 
#define BLYNK_PRINT Serial

#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include "DHT.h"

const char auth[] = "S5kG6cY7vMR_0HXTeKT_9oY5A9iVJBPd"; 
const char ssid[] = "Amandeep’s iPhone"; 
const char pass[] = "012345678"; 

#define DHTPIN 22
#define DHTTYPE DHT11
const int gasSensorPin = 34;
const int relayPin = 23;

const int gasThreshold = 25;        
const int gasHysteresis = 5;        
const float humidityThreshold = 70.0; 
const float humidityHysteresis = 5.0; 
const float temperatureThreshold = 25.0; 
const float temperatureHysteresis = 2.0; 

DHT dht(DHTPIN, DHTTYPE);
bool manualMode = false; 
bool fanOn = false;     

void setup()
{
  Serial.begin(115200);
  dht.begin();
  Blynk.begin(auth, ssid, pass);

  pinMode(relayPin, OUTPUT);
  pinMode(gasSensorPin, INPUT);

  digitalWrite(relayPin, LOW);  
  delay(500);
  
  Blynk.syncVirtual(V4);
}

BLYNK_WRITE(V4) 
{
  int relayControl = param.asInt();
  manualMode = (relayControl == 1); 

  Serial.print("Manual control mode: ");
  Serial.println(manualMode ? "ENABLED" : "DISABLED");

  if (manualMode)
  {
    fanOn = (relayControl == 1); 
    digitalWrite(relayPin, fanOn ? LOW : HIGH);
    Blynk.virtualWrite(V3, fanOn ? LOW : HIGH); 
    Serial.println(fanOn ? "Manual mode: Fan turned ON" : "Manual mode: Fan turned OFF");
  }
}

void loop()
{
  Blynk.run();

  if (!manualMode) 
  {
    int sensorValue = analogRead(gasSensorPin);
    int gas_percentage = map(sensorValue, 0, 5023, 0, 100); 

    float humidity = dht.readHumidity();
    float temperature = dht.readTemperature();

    if (isnan(humidity) || isnan(temperature))
    {
      Serial.println("Failed to read from DHT sensor!");
      return;
    }

    Serial.print("Humidity: ");
    Serial.print(humidity);
    Serial.println("%");

    Serial.print("Temperature: ");
    Serial.print(temperature);
    Serial.println("°C ");

    Serial.print("Gas sensor value: ");
    Serial.println(sensorValue);

    Serial.print("Gas Percentage: ");
    Serial.print(gas_percentage);
    Serial.println("%");

    Serial.println();

    
    if (!fanOn && (gas_percentage >= gasThreshold || 
                   humidity >= humidityThreshold || 
                   temperature >= temperatureThreshold))
    {
      fanOn = true;
      digitalWrite(relayPin, LOW); 
      Blynk.virtualWrite(V3, LOW);
      Serial.println("Auto mode: Fan turned ON");
    }
    else if (fanOn && (gas_percentage <= gasThreshold - gasHysteresis && 
                       humidity <= humidityThreshold - humidityHysteresis && 
                       temperature <= temperatureThreshold - temperatureHysteresis))
    {
      fanOn = false;
      digitalWrite(relayPin, HIGH); 
      Blynk.virtualWrite(V3, HIGH);
      Serial.println("Auto mode: Fan turned OFF");
    }

    Blynk.virtualWrite(V0, gas_percentage);
    Blynk.virtualWrite(V1, temperature);
    Blynk.virtualWrite(V2, humidity);
  }

  delay(1000);
}
